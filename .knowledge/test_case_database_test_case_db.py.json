{"is_source_file": true, "format": "Python", "description": "This Python script manages an SQLite database for test cases, including schema creation, insertion, and retrieval operations related to test case files and individual test cases, with functions for schema initialization, data insertion, and querying.", "external_files": ["sqlite3", "datetime"], "external_methods": ["sqlite3.connect", "datetime.utcnow", "datetime.isoformat"], "published": ["initialize_database", "insert_test_case_file", "insert_test_case", "get_test_case_files", "get_test_cases_by_file", "get_all_test_cases", "get_test_case_file_by_id"], "classes": [], "methods": [{"name": "_connect()", "description": "Establishes and returns a connection to the SQLite database.", "scope": "", "scopeKind": ""}, {"name": "_init_schema()", "description": "Creates the database tables if they do not exist.", "scope": "", "scopeKind": ""}, {"name": "initialize_database()", "description": "Public function to initialize database schema, safe to call multiple times.", "scope": "", "scopeKind": ""}, {"name": "int insert_test_case_file(filename: str, upload_date: Optional[str] = None)", "description": "Inserts a new test case file record, optionally with a specified upload date.", "scope": "", "scopeKind": ""}, {"name": "int insert_test_case(name: str, file_id: int)", "description": "Inserts a new test case linked to a file.", "scope": "", "scopeKind": ""}, {"name": "List[Dict] get_test_case_files()", "description": "Retrieves all test case files from the database.", "scope": "", "scopeKind": ""}, {"name": "List[Dict] get_test_cases_by_file(file_id: int)", "description": "Retrieves all test cases associated with a specific file ID.", "scope": "", "scopeKind": ""}, {"name": "List[Dict] get_all_test_cases()", "description": "Retrieves all test cases.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict] get_test_case_file_by_id(file_id: int)", "description": "Retrieves a specific test case file record by its ID.", "scope": "", "scopeKind": ""}], "calls": ["sqlite3.connect", "datetime.utcnow", "datetime.isoformat", "cursor.execute", "cursor.fetchall", "conn.commit", "conn.close", "cursor.fetchone"], "search-terms": ["test_case_db", "schema", "file_id", "test_cases", "test_case_files", "initialize_schema", "insert_test_case", "insert_test_case_file"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "0e0744e8a2c3f8ae5b67e8e88e2943cb1d339f24", "ctags": [{"_type": "tag", "name": "DB_NAME", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^DB_NAME = \"test_cases.db\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_connect", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def _connect():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_init_schema", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def _init_schema():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_all_test_cases", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def get_all_test_cases() -> List[Dict]:$/", "language": "Python", "typeref": "typename:List[Dict]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_test_case_file_by_id", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def get_test_case_file_by_id(file_id: int) -> Optional[Dict]:$/", "language": "Python", "typeref": "typename:Optional[Dict]", "kind": "function", "signature": "(file_id: int)"}, {"_type": "tag", "name": "get_test_case_files", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def get_test_case_files() -> List[Dict]:$/", "language": "Python", "typeref": "typename:List[Dict]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_test_cases_by_file", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def get_test_cases_by_file(file_id: int) -> List[Dict]:$/", "language": "Python", "typeref": "typename:List[Dict]", "kind": "function", "signature": "(file_id: int)"}, {"_type": "tag", "name": "initialize_database", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def initialize_database():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "insert_test_case", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def insert_test_case(name: str, file_id: int) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(name: str, file_id: int)"}, {"_type": "tag", "name": "insert_test_case_file", "path": "/home/kavia/workspace/code-generation/test-case-comparison-tool-4090dc26/test_case_database/test_case_db.py", "pattern": "/^def insert_test_case_file(filename: str, upload_date: Optional[str] = None) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(filename: str, upload_date: Optional[str] = None)"}], "hash": "66aaed71561419470349fc4eddf08e20", "format-version": 4, "code-base-name": "test_case_database", "filename": "test_case_database/test_case_db.py", "fields": [{"name": "DB_NAME = \"test_cases.db\"", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": "0e0744e8a2c3f8ae5b67e8e88e2943cb1d339f24"}]}